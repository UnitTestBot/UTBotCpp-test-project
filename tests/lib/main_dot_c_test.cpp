/*
 * This file is automatically generated by UnitTestBot. For further information seehttps://unittestbot.org
 */

#include "main_dot_c_test.h"

#include "gtest/gtest.h"
namespace UTBot {
static const float utbot_abs_error = 1e-6;


#pragma region regression
TEST(regression, exit_code_test_1)
{
    int actual = exit_code(1);
    EXPECT_EQ(0, actual);
}

TEST(regression, exit_code_test_2)
{
    int actual = exit_code(0);
    EXPECT_EQ(1, actual);
}

TEST(regression, main2_test_1)
{
    char _argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_57_0 = 0; it_57_0 < 2; it_57_0 ++) {
        argv[it_57_0] = _argv[it_57_0];
    }
    argv[2] = NULL;
    int actual = main2(1, argv);
    EXPECT_EQ(0, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    for (int it_58_0 = 0; it_58_0 < 2; it_58_0 ++) {
        for (int it_58_1 = 0; it_58_1 < 2; it_58_1 ++) {
            EXPECT_EQ(expected_argv[it_58_0][it_58_1], _argv[it_58_0][it_58_1]);
        }
    }
}

TEST(regression, main2_test_2)
{
    char _argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_59_0 = 0; it_59_0 < 2; it_59_0 ++) {
        argv[it_59_0] = _argv[it_59_0];
    }
    argv[2] = NULL;
    int actual = main2(0, argv);
    EXPECT_EQ(1, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    for (int it_60_0 = 0; it_60_0 < 2; it_60_0 ++) {
        for (int it_60_1 = 0; it_60_1 < 2; it_60_1 ++) {
            EXPECT_EQ(expected_argv[it_60_0][it_60_1], _argv[it_60_0][it_60_1]);
        }
    }
}

TEST(regression, main_test_1)
{
    char _argv[2][2] = {{'c', 'c'}, {'{', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_61_0 = 0; it_61_0 < 2; it_61_0 ++) {
        argv[it_61_0] = _argv[it_61_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(2, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'{', 'a'}};
    for (int it_62_0 = 0; it_62_0 < 2; it_62_0 ++) {
        for (int it_62_1 = 0; it_62_1 < 2; it_62_1 ++) {
            EXPECT_EQ(expected_argv[it_62_0][it_62_1], _argv[it_62_0][it_62_1]);
        }
    }
}

TEST(regression, main_test_2)
{
    char _argv[2][2] = {{'c', 'c'}, {'1', '@'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_63_0 = 0; it_63_0 < 2; it_63_0 ++) {
        argv[it_63_0] = _argv[it_63_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(3, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'1', '@'}};
    for (int it_64_0 = 0; it_64_0 < 2; it_64_0 ++) {
        for (int it_64_1 = 0; it_64_1 < 2; it_64_1 ++) {
            EXPECT_EQ(expected_argv[it_64_0][it_64_1], _argv[it_64_0][it_64_1]);
        }
    }
}

TEST(regression, main_test_3)
{
    char _argv[2][2] = {{'c', 'c'}, {'9', '@'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_65_0 = 0; it_65_0 < 2; it_65_0 ++) {
        argv[it_65_0] = _argv[it_65_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(9, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'9', '@'}};
    for (int it_66_0 = 0; it_66_0 < 2; it_66_0 ++) {
        for (int it_66_1 = 0; it_66_1 < 2; it_66_1 ++) {
            EXPECT_EQ(expected_argv[it_66_0][it_66_1], _argv[it_66_0][it_66_1]);
        }
    }
}

TEST(regression, main_test_4)
{
    char _argv[2][2] = {{'c', 'c'}, {'a', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_67_0 = 0; it_67_0 < 2; it_67_0 ++) {
        argv[it_67_0] = _argv[it_67_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(2, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'a', 'a'}};
    for (int it_68_0 = 0; it_68_0 < 2; it_68_0 ++) {
        for (int it_68_1 = 0; it_68_1 < 2; it_68_1 ++) {
            EXPECT_EQ(expected_argv[it_68_0][it_68_1], _argv[it_68_0][it_68_1]);
        }
    }
}

TEST(regression, main_test_5)
{
    char _argv[2][2] = {{'c', 'c'}, {'1', '\0'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_69_0 = 0; it_69_0 < 2; it_69_0 ++) {
        argv[it_69_0] = _argv[it_69_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(3, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'1', '\0'}};
    for (int it_70_0 = 0; it_70_0 < 2; it_70_0 ++) {
        for (int it_70_1 = 0; it_70_1 < 2; it_70_1 ++) {
            EXPECT_EQ(expected_argv[it_70_0][it_70_1], _argv[it_70_0][it_70_1]);
        }
    }
}

TEST(regression, main_test_6)
{
    char _argv[2][2] = {{'c', 'c'}, {'\0', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_71_0 = 0; it_71_0 < 2; it_71_0 ++) {
        argv[it_71_0] = _argv[it_71_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(2, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'\0', 'a'}};
    for (int it_72_0 = 0; it_72_0 < 2; it_72_0 ++) {
        for (int it_72_1 = 0; it_72_1 < 2; it_72_1 ++) {
            EXPECT_EQ(expected_argv[it_72_0][it_72_1], _argv[it_72_0][it_72_1]);
        }
    }
}

TEST(regression, main_test_7)
{
    char _argv[2][2] = {{'c', 'c'}, {'X', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_73_0 = 0; it_73_0 < 2; it_73_0 ++) {
        argv[it_73_0] = _argv[it_73_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(2, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'X', 'a'}};
    for (int it_74_0 = 0; it_74_0 < 2; it_74_0 ++) {
        for (int it_74_1 = 0; it_74_1 < 2; it_74_1 ++) {
            EXPECT_EQ(expected_argv[it_74_0][it_74_1], _argv[it_74_0][it_74_1]);
        }
    }
}

TEST(regression, main_test_8)
{
    char _argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_75_0 = 0; it_75_0 < 2; it_75_0 ++) {
        argv[it_75_0] = _argv[it_75_0];
    }
    argv[2] = NULL;
    int actual = main(0, argv);
    EXPECT_EQ(1, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    for (int it_76_0 = 0; it_76_0 < 2; it_76_0 ++) {
        for (int it_76_1 = 0; it_76_1 < 2; it_76_1 ++) {
            EXPECT_EQ(expected_argv[it_76_0][it_76_1], _argv[it_76_0][it_76_1]);
        }
    }
}

#pragma endregion
#pragma region error
TEST(error, main_test_9)
{
    char _argv[2][2] = {{'c', 'b'}, {'4', '0'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_77_0 = 0; it_77_0 < 2; it_77_0 ++) {
        argv[it_77_0] = _argv[it_77_0];
    }
    argv[2] = NULL;
    main(2, argv);
}

TEST(error, main_test_10)
{
    char _argv[2][2] = {{'c', 'b'}, {' ', '-'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_78_0 = 0; it_78_0 < 2; it_78_0 ++) {
        argv[it_78_0] = _argv[it_78_0];
    }
    argv[2] = NULL;
    main(2, argv);
}

TEST(error, main_test_11)
{
    char _argv[2][2] = {{'c', 'b'}, {' ', '+'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_79_0 = 0; it_79_0 < 2; it_79_0 ++) {
        argv[it_79_0] = _argv[it_79_0];
    }
    argv[2] = NULL;
    main(2, argv);
}

TEST(error, main_test_12)
{
    char _argv[2][2] = {{'c', 'b'}, {' ', ' '}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_80_0 = 0; it_80_0 < 2; it_80_0 ++) {
        argv[it_80_0] = _argv[it_80_0];
    }
    argv[2] = NULL;
    main(2, argv);
}

#pragma endregion
}
